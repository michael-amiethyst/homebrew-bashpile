#!/usr/bin/env bash

#
# Generated from bin/bpr.bps on 2023-08-19T17:48:38.734389059-07:00[America/Los_Angeles] (timestamp 1692492518734)
#
# strict mode header
set -eEuo pipefail -o posix
export IFS=$'\n\t'
declare s
trap 's=$?; echo "Error (exit code $s) found on line $LINENO.  Command was: $BASH_COMMAND"; exit $s' ERR
# assign statement, Bashpile line 7
export jarPath
jarPath=$(dirname "${BASH_SOURCE[0]}")/bashpile.jar
if [ -z "${1+default}" ]; then
    # expression statement, Bashpile line 11
    trap - ERR
    # expression statement, Bashpile line 12
    java -jar "$jarPath"
    # expression statement, Bashpile line 13
    exit $?
fi
# creates statement, Bashpile line 16
export  translatedFilename
if translatedFilename=$(set -o noclobber; java -jar "$jarPath" "$1" | tail --lines 1) 2> /dev/null; then
    trap 'rm -f "$translatedFilename"; exit 10' INT TERM EXIT
    ## wrapped body of creates statement
    # expression statement, Bashpile line 19
    shift
    # print statement, Bashpile line 20
    printf "Start of ${translatedFilename}\n"
    # expression statement, Bashpile line 21
    chmod 755 $translatedFilename
    # expression statement, Bashpile line 22
    "$translatedFilename" "$@"
    ## end of wrapped body of creates statement
    rm -f "$translatedFilename"
    trap - INT TERM EXIT
else
    printf "Failed to create translatedFilename correctly.  Output from attempted creation:\n$translatedFilename"
    rm -f "$translatedFilename"
    exit 1
fi
declare -i __bp_exitCode=$?
if [ "$__bp_exitCode" -ne 0 ]; then exit "$__bp_exitCode"; fi
