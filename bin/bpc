#!/usr/bin/env bash

#
# Generated from bin/bpc.bps on 2024-12-12T12:41:19.348380-05:00[America/New_York] (timestamp 1734025279348)
#
# strict mode header
set -eEuo pipefail -o posix
declare -x IFS=$'\n\t'
declare -i s
trap 's=$?; echo "Error (exit code $s) found on line $LINENO.  Command was: $BASH_COMMAND"; exit $s' ERR
source ${BASHPILE_HOME:=.}/bin/stdlib || source ${BASHPILE_HOME:=.}/stdlib
# expression statement, Bashpile line 3
assertGnuGetopt
# assign statement, Bashpile line 6
declare opts
opts=$(getopt -o co: --long command,outputFile: -n 'Bashpile Runner' -- "$@")
eval set -- "$opts"
# assign statement, Bashpile line 8
declare DEFAULT_FILENAME
DEFAULT_FILENAME="command.bash"
# assign statement, Bashpile line 9
declare translatedFilename
translatedFilename="${DEFAULT_FILENAME}"
# assign statement, Bashpile line 10
declare commandMode
commandMode=false
# while statement, Bashpile line 11
while true; do
  # switch statement, Bashpile line 12
  case $1 in
    -c | --command)
      # reassign statement, Bashpile line 14
      commandMode=true
      shift
      ;;
    -o | --outputFile)
      # reassign statement, Bashpile line 17
      translatedFilename=$2
      shift 2
      ;;
    "--")
      shift
      break
      ;;
    *)
      break
      ;;
  esac
done
if [ -n "${1+default}" ] && [ "$1" == "-" ]; then
  # reassign statement, Bashpile line 27
  commandMode=true
  shift
fi
if [ -n "${1+default}" ] && ! ${commandMode} && [ "${translatedFilename}" == "${DEFAULT_FILENAME}" ]; then
  # assign statement, Bashpile line 32
  declare dir
  dir=$(dirname "$1")
  # assign statement, Bashpile line 33
  declare filename
  filename=$(basename "$1" .bps)
  # reassign statement, Bashpile line 34
  translatedFilename=${dir}/${filename}
fi
# assign statement, Bashpile line 37
declare bpHome
if [ -z "${BASHPILE_HOME+default}" ]; then
  # assign statement, Bashpile line 39
  declare bpWhere
  bpWhere=$(whereis bashpile | cut -d ' ' -f 2)
  # reassign statement, Bashpile line 40
  bpHome=$(dirname "$bpWhere")
else
  # reassign statement, Bashpile line 43
  bpHome=${BASHPILE_HOME}
fi
# assign statement, Bashpile line 44
declare jarPath
jarPath="${bpHome}/bashpile.jar"
if ! [ -e "${jarPath}" ]; then
  # reassign statement, Bashpile line 46
  jarPath=${bpHome}/target/bashpile.jar
fi
if ${commandMode}; then
  # assign statement, Bashpile line 49
  declare commandString
  commandString=$(cat -)
  # expression statement, Bashpile line 50
  java -jar "$jarPath" --outputFile="$translatedFilename" -c "$commandString"
else
  # expression statement, Bashpile line 52
  java -jar "$jarPath" --outputFile="$translatedFilename" "$@"
fi
chmod 755 $translatedFilename
