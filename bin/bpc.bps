#!/usr/bin/env bpr

source ${BASHPILE_HOME:=.}/bin/stdlib || source ${BASHPILE_HOME:=.}/stdlib
assertGnuGetopt()

// getopt
opts: str = #(getopt -o co: --long command,outputFile: -n 'Bashpile Runner' -- "$@")
eval set -- "$opts"
DEFAULT_FILENAME: str = "command.bash"
translatedFilename: str = DEFAULT_FILENAME
commandMode: bool = false
while true:
    switch arguments[1]:
        case "-c" or "--command":
            commandMode = true
            shift
        case "-o" or "--outputFile":
            translatedFilename = arguments[2]
            shift 2
        case "--":
            shift
            break
        case "*":
            break

// getopt in POSIX mode doesn't handle '-'
if isset arguments[1] and arguments[1] == "-":
    commandMode = true
    shift

// handle arguments
if isset arguments[1] and not commandMode and translatedFilename == DEFAULT_FILENAME:
    dir: str = #(dirname "$1")
    filename: str = #(basename "$1" .bps)
    translatedFilename = dir + "/" + filename

// find the jar location
bpHome: str
if unset BASHPILE_HOME:
    bpWhere: str = #(whereis bashpile | cut -d ' ' -f 2)
    bpHome = #(dirname "$bpWhere")
else:
    BASHPILE_HOME: str
    bpHome = BASHPILE_HOME + "/bin"
jarPath: str = bpHome + "/bashpile.jar"
if not fileExists jarPath:
    jarPath = bpHome + "/bin/bashpile.jar"

if commandMode:
    commandString: str = #(cat -)
    #(java -jar "$jarPath" --outputFile="$translatedFilename" -c "$commandString")
else:
    #(java -jar "$jarPath" --outputFile="$translatedFilename" "$@")

chmod 755 $translatedFilename
